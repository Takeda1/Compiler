	.data

temp: .word 0

arg1: .asciiz "object\n"

arg2: .asciiz "main\n"

Object_vtable:
	.word Object..new
	.word Object.copy

IO_vtable:
	.word IO..new
	.word IO.out_string
	.word IO.out_int
	.word Object.copy

Main_vtable:
	.word Main..new
	.word IO.out_string
	.word IO.out_int
	.word Object.copy
	.word Main.main

	.text

IO..new:
	li $a0, 12
	li $v0, 9
	syscall
	la $t0, IO_vtable
	sw $t0, 8($v0)
	jr $ra

IO.out_string:
	lw $a0 0($sp)
	li $v0, 4
	syscall
	jr $ra

IO.out_int:
	lw $a0 0($sp)
	li $v0, 1
	syscall
	jr $ra

Object..new:
	jr $ra

Object.copy:
	jr $ra

Main..new:
	sw $ra, temp
	lw $t7, temp
	li $a0, 12
	li $v0, 9
	syscall
	sw $v0, temp
	lw $t6, temp
	la $t0, Main_vtable
	sw $t0, 8($v0)
	sw $t6, temp
	lw $v0, temp
	jr $t7

Main.main:
	sw $ra, temp
	lw $s6, temp
	sw $s6, 0($gp)
	move $t7, $v0
	li $t0, 2
	sw $t0, temp
	lw $t0, temp
	sw $t0, 1000($sp)
CASE0:
	li $t1, 0
	bne $t0, $t1, CASE1
	la $t1, arg1
	sw $t1, 0($sp)
	sw $t2, 800($sp)
	lw $t2, 8($t7)
	lw $t2, 4($t2)
	jalr $t2
	lw $s2, 0($sp)
CASE1:
	li $t1, 2
	bne $t0, $t1, CASE2
	la $t1, arg2
	sw $t1, 0($sp)
	sw $t2, 800($sp)
	lw $t2, 8($t7)
	lw $t2, 4($t2)
	jalr $t2
	lw $s2, 0($sp)
CASE2:
	sw $t0, 0($sp)
	lw $s6, 0($gp)
	jr $s6

main:
	jal Main..new
	lw $t0, 8($v0)
	lw $t1, 16($t0)
	jalr $t1
	li $v0, 10
	syscall